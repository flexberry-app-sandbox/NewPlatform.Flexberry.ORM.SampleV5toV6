//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NewPlatform.SampleV5toV6
{
    using System;
    using System.Xml;
    using ICSSoft.STORMNET;
    using ICSSoft.STORMNET.Business.Audit;
    using ICSSoft.STORMNET.Business.Audit.Objects;
    
    
    // *** Start programmer edit section *** (Using statements)

    // *** End programmer edit section *** (Using statements)


    /// <summary>
    /// Notebook.
    /// </summary>
    // *** Start programmer edit section *** (Notebook CustomAttributes)

    // *** End programmer edit section *** (Notebook CustomAttributes)
    [AutoAltered()]
    [AccessType(ICSSoft.STORMNET.AccessType.none)]
    [View("AuditView", new string[] {
            "Model as \'Model\'",
            "SerialNumber as \'Serial number\'",
            "Person as \'Person\'",
            "Person.Name as \'Name\'"})]
    [AssociatedDetailViewAttribute("AuditView", "Hardware", "AuditView", true, "", "Hardware", true, new string[] {
            ""})]
    [View("NotebookE", new string[] {
            "Model as \'Model\'",
            "SerialNumber as \'Serial number\'",
            "Person as \'Person\'",
            "Person.Name as \'Name\'"})]
    [AssociatedDetailViewAttribute("NotebookE", "Hardware", "HardwareE", true, "", "Hardware", true, new string[] {
            ""})]
    [View("NotebookL", new string[] {
            "Model as \'Model\'",
            "SerialNumber as \'Serial number\'",
            "Person.Name as \'Name\'"})]
    public class Notebook : ICSSoft.STORMNET.DataObject, IDataObjectWithAuditFields
    {
        
        private string fModel;
        
        private string fSerialNumber;
        
        private System.Nullable<System.DateTime> fCreateTime;
        
        private string fCreator;
        
        private System.Nullable<System.DateTime> fEditTime;
        
        private string fEditor;
        
        private NewPlatform.SampleV5toV6.Person fPerson;
        
        private NewPlatform.SampleV5toV6.DetailArrayOfHardware fHardware;
        
        // *** Start programmer edit section *** (Notebook CustomMembers)

        // *** End programmer edit section *** (Notebook CustomMembers)

        
        /// <summary>
        /// Model.
        /// </summary>
        // *** Start programmer edit section *** (Notebook.Model CustomAttributes)

        // *** End programmer edit section *** (Notebook.Model CustomAttributes)
        [StrLen(255)]
        public virtual string Model
        {
            get
            {
                // *** Start programmer edit section *** (Notebook.Model Get start)

                // *** End programmer edit section *** (Notebook.Model Get start)
                string result = this.fModel;
                // *** Start programmer edit section *** (Notebook.Model Get end)

                // *** End programmer edit section *** (Notebook.Model Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Notebook.Model Set start)

                // *** End programmer edit section *** (Notebook.Model Set start)
                this.fModel = value;
                // *** Start programmer edit section *** (Notebook.Model Set end)

                // *** End programmer edit section *** (Notebook.Model Set end)
            }
        }
        
        /// <summary>
        /// SerialNumber.
        /// </summary>
        // *** Start programmer edit section *** (Notebook.SerialNumber CustomAttributes)

        // *** End programmer edit section *** (Notebook.SerialNumber CustomAttributes)
        [StrLen(255)]
        public virtual string SerialNumber
        {
            get
            {
                // *** Start programmer edit section *** (Notebook.SerialNumber Get start)

                // *** End programmer edit section *** (Notebook.SerialNumber Get start)
                string result = this.fSerialNumber;
                // *** Start programmer edit section *** (Notebook.SerialNumber Get end)

                // *** End programmer edit section *** (Notebook.SerialNumber Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Notebook.SerialNumber Set start)

                // *** End programmer edit section *** (Notebook.SerialNumber Set start)
                this.fSerialNumber = value;
                // *** Start programmer edit section *** (Notebook.SerialNumber Set end)

                // *** End programmer edit section *** (Notebook.SerialNumber Set end)
            }
        }
        
        /// <summary>
        /// Время создания объекта.
        /// </summary>
        // *** Start programmer edit section *** (Notebook.CreateTime CustomAttributes)

        // *** End programmer edit section *** (Notebook.CreateTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> CreateTime
        {
            get
            {
                // *** Start programmer edit section *** (Notebook.CreateTime Get start)

                // *** End programmer edit section *** (Notebook.CreateTime Get start)
                System.Nullable<System.DateTime> result = this.fCreateTime;
                // *** Start programmer edit section *** (Notebook.CreateTime Get end)

                // *** End programmer edit section *** (Notebook.CreateTime Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Notebook.CreateTime Set start)

                // *** End programmer edit section *** (Notebook.CreateTime Set start)
                this.fCreateTime = value;
                // *** Start programmer edit section *** (Notebook.CreateTime Set end)

                // *** End programmer edit section *** (Notebook.CreateTime Set end)
            }
        }
        
        /// <summary>
        /// Создатель объекта.
        /// </summary>
        // *** Start programmer edit section *** (Notebook.Creator CustomAttributes)

        // *** End programmer edit section *** (Notebook.Creator CustomAttributes)
        [StrLen(255)]
        public virtual string Creator
        {
            get
            {
                // *** Start programmer edit section *** (Notebook.Creator Get start)

                // *** End programmer edit section *** (Notebook.Creator Get start)
                string result = this.fCreator;
                // *** Start programmer edit section *** (Notebook.Creator Get end)

                // *** End programmer edit section *** (Notebook.Creator Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Notebook.Creator Set start)

                // *** End programmer edit section *** (Notebook.Creator Set start)
                this.fCreator = value;
                // *** Start programmer edit section *** (Notebook.Creator Set end)

                // *** End programmer edit section *** (Notebook.Creator Set end)
            }
        }
        
        /// <summary>
        /// Время последнего редактирования объекта.
        /// </summary>
        // *** Start programmer edit section *** (Notebook.EditTime CustomAttributes)

        // *** End programmer edit section *** (Notebook.EditTime CustomAttributes)
        public virtual System.Nullable<System.DateTime> EditTime
        {
            get
            {
                // *** Start programmer edit section *** (Notebook.EditTime Get start)

                // *** End programmer edit section *** (Notebook.EditTime Get start)
                System.Nullable<System.DateTime> result = this.fEditTime;
                // *** Start programmer edit section *** (Notebook.EditTime Get end)

                // *** End programmer edit section *** (Notebook.EditTime Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Notebook.EditTime Set start)

                // *** End programmer edit section *** (Notebook.EditTime Set start)
                this.fEditTime = value;
                // *** Start programmer edit section *** (Notebook.EditTime Set end)

                // *** End programmer edit section *** (Notebook.EditTime Set end)
            }
        }
        
        /// <summary>
        /// Последний редактор объекта.
        /// </summary>
        // *** Start programmer edit section *** (Notebook.Editor CustomAttributes)

        // *** End programmer edit section *** (Notebook.Editor CustomAttributes)
        [StrLen(255)]
        public virtual string Editor
        {
            get
            {
                // *** Start programmer edit section *** (Notebook.Editor Get start)

                // *** End programmer edit section *** (Notebook.Editor Get start)
                string result = this.fEditor;
                // *** Start programmer edit section *** (Notebook.Editor Get end)

                // *** End programmer edit section *** (Notebook.Editor Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Notebook.Editor Set start)

                // *** End programmer edit section *** (Notebook.Editor Set start)
                this.fEditor = value;
                // *** Start programmer edit section *** (Notebook.Editor Set end)

                // *** End programmer edit section *** (Notebook.Editor Set end)
            }
        }
        
        /// <summary>
        /// Notebook.
        /// </summary>
        // *** Start programmer edit section *** (Notebook.Person CustomAttributes)

        // *** End programmer edit section *** (Notebook.Person CustomAttributes)
        [PropertyStorage(new string[] {
                "Person"})]
        public virtual NewPlatform.SampleV5toV6.Person Person
        {
            get
            {
                // *** Start programmer edit section *** (Notebook.Person Get start)

                // *** End programmer edit section *** (Notebook.Person Get start)
                NewPlatform.SampleV5toV6.Person result = this.fPerson;
                // *** Start programmer edit section *** (Notebook.Person Get end)

                // *** End programmer edit section *** (Notebook.Person Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Notebook.Person Set start)

                // *** End programmer edit section *** (Notebook.Person Set start)
                this.fPerson = value;
                // *** Start programmer edit section *** (Notebook.Person Set end)

                // *** End programmer edit section *** (Notebook.Person Set end)
            }
        }
        
        /// <summary>
        /// Notebook.
        /// </summary>
        // *** Start programmer edit section *** (Notebook.Hardware CustomAttributes)

        // *** End programmer edit section *** (Notebook.Hardware CustomAttributes)
        public virtual NewPlatform.SampleV5toV6.DetailArrayOfHardware Hardware
        {
            get
            {
                // *** Start programmer edit section *** (Notebook.Hardware Get start)

                // *** End programmer edit section *** (Notebook.Hardware Get start)
                if ((this.fHardware == null))
                {
                    this.fHardware = new NewPlatform.SampleV5toV6.DetailArrayOfHardware(this);
                }
                NewPlatform.SampleV5toV6.DetailArrayOfHardware result = this.fHardware;
                // *** Start programmer edit section *** (Notebook.Hardware Get end)

                // *** End programmer edit section *** (Notebook.Hardware Get end)
                return result;
            }
            set
            {
                // *** Start programmer edit section *** (Notebook.Hardware Set start)

                // *** End programmer edit section *** (Notebook.Hardware Set start)
                this.fHardware = value;
                // *** Start programmer edit section *** (Notebook.Hardware Set end)

                // *** End programmer edit section *** (Notebook.Hardware Set end)
            }
        }
        
        /// <summary>
        /// Class views container.
        /// </summary>
        public class Views
        {
            
            /// <summary>
            /// "AuditView" view.
            /// </summary>
            public static ICSSoft.STORMNET.View AuditView
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("AuditView", typeof(NewPlatform.SampleV5toV6.Notebook));
                }
            }
            
            /// <summary>
            /// "NotebookE" view.
            /// </summary>
            public static ICSSoft.STORMNET.View NotebookE
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("NotebookE", typeof(NewPlatform.SampleV5toV6.Notebook));
                }
            }
            
            /// <summary>
            /// "NotebookL" view.
            /// </summary>
            public static ICSSoft.STORMNET.View NotebookL
            {
                get
                {
                    return ICSSoft.STORMNET.Information.GetView("NotebookL", typeof(NewPlatform.SampleV5toV6.Notebook));
                }
            }
        }
        
        /// <summary>
        /// Audit class settings.
        /// </summary>
        public class AuditSettings
        {
            
            /// <summary>
            /// Включён ли аудит для класса.
            /// </summary>
            public static bool AuditEnabled = true;
            
            /// <summary>
            /// Использовать имя представления для аудита по умолчанию.
            /// </summary>
            public static bool UseDefaultView = false;
            
            /// <summary>
            /// Включён ли аудит операции чтения.
            /// </summary>
            public static bool SelectAudit = false;
            
            /// <summary>
            /// Имя представления для аудирования операции чтения.
            /// </summary>
            public static string SelectAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции создания.
            /// </summary>
            public static bool InsertAudit = true;
            
            /// <summary>
            /// Имя представления для аудирования операции создания.
            /// </summary>
            public static string InsertAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции изменения.
            /// </summary>
            public static bool UpdateAudit = false;
            
            /// <summary>
            /// Имя представления для аудирования операции изменения.
            /// </summary>
            public static string UpdateAuditViewName = "AuditView";
            
            /// <summary>
            /// Включён ли аудит операции удаления.
            /// </summary>
            public static bool DeleteAudit = true;
            
            /// <summary>
            /// Имя представления для аудирования операции удаления.
            /// </summary>
            public static string DeleteAuditViewName = "AuditView";
            
            /// <summary>
            /// Путь к форме просмотра результатов аудита.
            /// </summary>
            public static string FormUrl = "";
            
            /// <summary>
            /// Режим записи данных аудита (синхронный или асинхронный).
            /// </summary>
            public static ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode WriteMode = ICSSoft.STORMNET.Business.Audit.Objects.tWriteMode.Synchronous;
            
            /// <summary>
            /// Максимальная длина сохраняемого значения поля (если 0, то строка обрезаться не будет).
            /// </summary>
            public static int PrunningLength = 0;
            
            /// <summary>
            /// Показывать ли пользователям в изменениях первичные ключи.
            /// </summary>
            public static bool ShowPrimaryKey = false;
            
            /// <summary>
            /// Сохранять ли старое значение.
            /// </summary>
            public static bool KeepOldValue = true;
            
            /// <summary>
            /// Сжимать ли сохраняемые значения.
            /// </summary>
            public static bool Compress = false;
            
            /// <summary>
            /// Сохранять ли все значения атрибутов, а не только изменяемые.
            /// </summary>
            public static bool KeepAllValues = false;
        }
    }
}
